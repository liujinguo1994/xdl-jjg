<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aite.mapper.DicCoinMapper">
  <resultMap id="BaseResultMap" type="com.aite.pojo.DicCoin">
    <id column="coin_id" jdbcType="VARCHAR" property="coinId" />
    <result column="contract_address" jdbcType="VARCHAR" property="contractAddress" />
    <result column="symbol" jdbcType="VARCHAR" property="symbol" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="logo" jdbcType="VARCHAR" property="logo" />
    <result column="bottom_layer_id" jdbcType="VARCHAR" property="bottomLayerId" />
    <result column="public_chain_flag" jdbcType="BIT" property="publicChainFlag" />
    <result column="txHash" jdbcType="VARCHAR" property="txhash" />
    <result column="decimals" jdbcType="INTEGER" property="decimals" />
    <result column="show_decimals" jdbcType="INTEGER" property="showDecimals" />
    <result column="supply" jdbcType="BIGINT" property="supply" />
    <result column="total" jdbcType="BIGINT" property="total" />
    <result column="balance" jdbcType="BIGINT" property="balance" />
    <result column="owner" jdbcType="VARCHAR" property="owner" />
    <result column="del_flag" jdbcType="BIT" property="delFlag" />
    <result column="add_time" jdbcType="TIMESTAMP" property="addTime" />
    <result column="upt_time" jdbcType="TIMESTAMP" property="uptTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    coin_id, contract_address, symbol, `name`, logo, bottom_layer_id, public_chain_flag, 
    txHash, decimals, show_decimals, supply, total, balance, `owner`, del_flag, add_time, 
    upt_time
  </sql>
  <select id="selectByExample" parameterType="com.aite.pojo.DicCoinExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from dic_coin
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <if test="example.distinct">
      distinct
    </if>
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        coin_id, contract_address, symbol, `name`, logo, bottom_layer_id, public_chain_flag, 
          txHash, decimals, show_decimals, supply, total, balance, `owner`, del_flag, add_time, 
          upt_time
      </otherwise>
    </choose>
    from dic_coin
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from dic_coin
    where coin_id = #{coinId,jdbcType=VARCHAR}
  </select>
  <select id="selectByPrimaryKeySelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        coin_id, contract_address, symbol, `name`, logo, bottom_layer_id, public_chain_flag, 
          txHash, decimals, show_decimals, supply, total, balance, `owner`, del_flag, add_time, 
          upt_time
      </otherwise>
    </choose>
    from dic_coin
    where coin_id = #{coinId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from dic_coin
    where coin_id = #{coinId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.aite.pojo.DicCoinExample">
    delete from dic_coin
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.aite.pojo.DicCoin">
    insert into dic_coin (coin_id, contract_address, symbol, 
      `name`, logo, bottom_layer_id, 
      public_chain_flag, txHash, decimals, 
      show_decimals, supply, total, 
      balance, `owner`, del_flag, 
      add_time, upt_time)
    values (#{coinId,jdbcType=VARCHAR}, #{contractAddress,jdbcType=VARCHAR}, #{symbol,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{logo,jdbcType=VARCHAR}, #{bottomLayerId,jdbcType=VARCHAR}, 
      #{publicChainFlag,jdbcType=BIT}, #{txhash,jdbcType=VARCHAR}, #{decimals,jdbcType=INTEGER}, 
      #{showDecimals,jdbcType=INTEGER}, #{supply,jdbcType=BIGINT}, #{total,jdbcType=BIGINT}, 
      #{balance,jdbcType=BIGINT}, #{owner,jdbcType=VARCHAR}, #{delFlag,jdbcType=BIT}, 
      #{addTime,jdbcType=TIMESTAMP}, #{uptTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.aite.pojo.DicCoin">
    insert into dic_coin
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="coinId != null">
        coin_id,
      </if>
      <if test="contractAddress != null">
        contract_address,
      </if>
      <if test="symbol != null">
        symbol,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="logo != null">
        logo,
      </if>
      <if test="bottomLayerId != null">
        bottom_layer_id,
      </if>
      <if test="publicChainFlag != null">
        public_chain_flag,
      </if>
      <if test="txhash != null">
        txHash,
      </if>
      <if test="decimals != null">
        decimals,
      </if>
      <if test="showDecimals != null">
        show_decimals,
      </if>
      <if test="supply != null">
        supply,
      </if>
      <if test="total != null">
        total,
      </if>
      <if test="balance != null">
        balance,
      </if>
      <if test="owner != null">
        `owner`,
      </if>
      <if test="delFlag != null">
        del_flag,
      </if>
      <if test="addTime != null">
        add_time,
      </if>
      <if test="uptTime != null">
        upt_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="coinId != null">
        #{coinId,jdbcType=VARCHAR},
      </if>
      <if test="contractAddress != null">
        #{contractAddress,jdbcType=VARCHAR},
      </if>
      <if test="symbol != null">
        #{symbol,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="logo != null">
        #{logo,jdbcType=VARCHAR},
      </if>
      <if test="bottomLayerId != null">
        #{bottomLayerId,jdbcType=VARCHAR},
      </if>
      <if test="publicChainFlag != null">
        #{publicChainFlag,jdbcType=BIT},
      </if>
      <if test="txhash != null">
        #{txhash,jdbcType=VARCHAR},
      </if>
      <if test="decimals != null">
        #{decimals,jdbcType=INTEGER},
      </if>
      <if test="showDecimals != null">
        #{showDecimals,jdbcType=INTEGER},
      </if>
      <if test="supply != null">
        #{supply,jdbcType=BIGINT},
      </if>
      <if test="total != null">
        #{total,jdbcType=BIGINT},
      </if>
      <if test="balance != null">
        #{balance,jdbcType=BIGINT},
      </if>
      <if test="owner != null">
        #{owner,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null">
        #{delFlag,jdbcType=BIT},
      </if>
      <if test="addTime != null">
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="uptTime != null">
        #{uptTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.aite.pojo.DicCoinExample" resultType="java.lang.Long">
    select count(*) from dic_coin
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update dic_coin
    <set>
      <if test="record.coinId != null">
        coin_id = #{record.coinId,jdbcType=VARCHAR},
      </if>
      <if test="record.contractAddress != null">
        contract_address = #{record.contractAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.symbol != null">
        symbol = #{record.symbol,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        `name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.logo != null">
        logo = #{record.logo,jdbcType=VARCHAR},
      </if>
      <if test="record.bottomLayerId != null">
        bottom_layer_id = #{record.bottomLayerId,jdbcType=VARCHAR},
      </if>
      <if test="record.publicChainFlag != null">
        public_chain_flag = #{record.publicChainFlag,jdbcType=BIT},
      </if>
      <if test="record.txhash != null">
        txHash = #{record.txhash,jdbcType=VARCHAR},
      </if>
      <if test="record.decimals != null">
        decimals = #{record.decimals,jdbcType=INTEGER},
      </if>
      <if test="record.showDecimals != null">
        show_decimals = #{record.showDecimals,jdbcType=INTEGER},
      </if>
      <if test="record.supply != null">
        supply = #{record.supply,jdbcType=BIGINT},
      </if>
      <if test="record.total != null">
        total = #{record.total,jdbcType=BIGINT},
      </if>
      <if test="record.balance != null">
        balance = #{record.balance,jdbcType=BIGINT},
      </if>
      <if test="record.owner != null">
        `owner` = #{record.owner,jdbcType=VARCHAR},
      </if>
      <if test="record.delFlag != null">
        del_flag = #{record.delFlag,jdbcType=BIT},
      </if>
      <if test="record.addTime != null">
        add_time = #{record.addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.uptTime != null">
        upt_time = #{record.uptTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update dic_coin
    set coin_id = #{record.coinId,jdbcType=VARCHAR},
      contract_address = #{record.contractAddress,jdbcType=VARCHAR},
      symbol = #{record.symbol,jdbcType=VARCHAR},
      `name` = #{record.name,jdbcType=VARCHAR},
      logo = #{record.logo,jdbcType=VARCHAR},
      bottom_layer_id = #{record.bottomLayerId,jdbcType=VARCHAR},
      public_chain_flag = #{record.publicChainFlag,jdbcType=BIT},
      txHash = #{record.txhash,jdbcType=VARCHAR},
      decimals = #{record.decimals,jdbcType=INTEGER},
      show_decimals = #{record.showDecimals,jdbcType=INTEGER},
      supply = #{record.supply,jdbcType=BIGINT},
      total = #{record.total,jdbcType=BIGINT},
      balance = #{record.balance,jdbcType=BIGINT},
      `owner` = #{record.owner,jdbcType=VARCHAR},
      del_flag = #{record.delFlag,jdbcType=BIT},
      add_time = #{record.addTime,jdbcType=TIMESTAMP},
      upt_time = #{record.uptTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.aite.pojo.DicCoin">
    update dic_coin
    <set>
      <if test="contractAddress != null">
        contract_address = #{contractAddress,jdbcType=VARCHAR},
      </if>
      <if test="symbol != null">
        symbol = #{symbol,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="logo != null">
        logo = #{logo,jdbcType=VARCHAR},
      </if>
      <if test="bottomLayerId != null">
        bottom_layer_id = #{bottomLayerId,jdbcType=VARCHAR},
      </if>
      <if test="publicChainFlag != null">
        public_chain_flag = #{publicChainFlag,jdbcType=BIT},
      </if>
      <if test="txhash != null">
        txHash = #{txhash,jdbcType=VARCHAR},
      </if>
      <if test="decimals != null">
        decimals = #{decimals,jdbcType=INTEGER},
      </if>
      <if test="showDecimals != null">
        show_decimals = #{showDecimals,jdbcType=INTEGER},
      </if>
      <if test="supply != null">
        supply = #{supply,jdbcType=BIGINT},
      </if>
      <if test="total != null">
        total = #{total,jdbcType=BIGINT},
      </if>
      <if test="balance != null">
        balance = #{balance,jdbcType=BIGINT},
      </if>
      <if test="owner != null">
        `owner` = #{owner,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null">
        del_flag = #{delFlag,jdbcType=BIT},
      </if>
      <if test="addTime != null">
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="uptTime != null">
        upt_time = #{uptTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where coin_id = #{coinId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.aite.pojo.DicCoin">
    update dic_coin
    set contract_address = #{contractAddress,jdbcType=VARCHAR},
      symbol = #{symbol,jdbcType=VARCHAR},
      `name` = #{name,jdbcType=VARCHAR},
      logo = #{logo,jdbcType=VARCHAR},
      bottom_layer_id = #{bottomLayerId,jdbcType=VARCHAR},
      public_chain_flag = #{publicChainFlag,jdbcType=BIT},
      txHash = #{txhash,jdbcType=VARCHAR},
      decimals = #{decimals,jdbcType=INTEGER},
      show_decimals = #{showDecimals,jdbcType=INTEGER},
      supply = #{supply,jdbcType=BIGINT},
      total = #{total,jdbcType=BIGINT},
      balance = #{balance,jdbcType=BIGINT},
      `owner` = #{owner,jdbcType=VARCHAR},
      del_flag = #{delFlag,jdbcType=BIT},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      upt_time = #{uptTime,jdbcType=TIMESTAMP}
    where coin_id = #{coinId,jdbcType=VARCHAR}
  </update>
  <select id="selectOneByExample" parameterType="com.aite.pojo.DicCoinExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <include refid="Base_Column_List" />
    from dic_coin
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        coin_id, contract_address, symbol, `name`, logo, bottom_layer_id, public_chain_flag, 
          txHash, decimals, show_decimals, supply, total, balance, `owner`, del_flag, add_time, 
          upt_time
      </otherwise>
    </choose>
    from dic_coin
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    limit 1
  </select>
</mapper>